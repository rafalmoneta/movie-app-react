{"version":3,"sources":["assets/moviedbicon.svg","components/Movie.js","components/Wrapper.js","components/SearchBar.js","components/Header.js","components/Button.js","components/GridContainer.js","components/SortBar.js","components/Home.js","components/MoviePageInfo.js","components/MoviePageProduction.js","components/MoviePage.js","components/ScrollToTop.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MovieContainer","styled","div","MovieInfo","ImageContainer","MovieTitle","h3","BlankImage","Movie","movie","genres","small","to","id","poster_path","src","alt","original_title","release_date","split","movieIDs","slice","map","key","name","join","getGenres","genre_ids","role","aria-label","vote_average","vote_count","Box","main","Wrapper","children","SearchBox","SearchBoxContent","SearchBar","handleQueryChange","handleSearchValueChange","useState","searchValue","setSearchValue","useEffect","type","placeholder","onChange","event","currentTarget","value","HeaderContent","YellowBox","Logo","MovieContent","Desc","p","Header","isLoading","home","setQuery","MoviedbLogo","backdrop_path","overview","ButtonStyled","button","Button","onClick","Container","GridContainer","SortContainer","ButtonsBox","SortBar","query","buttons","index","dataFetchReducer","state","action","data","movies","pages","error","Home","process","apiGenres","currentPage","setCurrentPage","endpoint","setEndpoint","useReducer","dispatch","a","Promise","all","fetch","res","json","resParsed","genresParsed","results","total_pages","console","log","fetching","length","style","margin","width","CastInfo","CastName","PlayingBox","CenteredDiv","MoviePageInfo","cast","crew","loadNumber","setLoadNumber","castMember","profile_path","character","crewMember","job","ProductionInfo","ImageCircle","img","MoviePageProduction","production","company","logo_path","movieData","creditsData","err","MoviePage","props","match","params","movieID","movieApi","movieCreditsApi","res1","res2","fetchMovieData","display","textAlign","fontStyle","fontSize","tagline","production_companies","ScrollToTop","pathname","useLocation","window","scrollTo","App","className","exact","path","component","Boolean","location","hostname","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a046118.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/moviedbicon.0f4a7f74.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MovieContainer = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  a {\r\n    text-decoration: none;\r\n    color: white;\r\n  }\r\n`\r\nconst MovieInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5em;\r\n  div:first-child {\r\n    display: flex;\r\n    flex-direction: row;\r\n    ${'' /* align-items: center; */}\r\n    justify-content: space-between;\r\n    p { margin: 0;}\r\n  }\r\n  p {\r\n      margin: 5px 0;\r\n    }\r\n`\r\nconst ImageContainer = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  img {\r\n    width: 100%;\r\n    border-radius: 25px;\r\n  }\r\n`\r\nconst MovieTitle = styled.h3`\r\n  margin: 0;\r\n`\r\n\r\nconst BlankImage = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 500px;\r\n  background-color: white;\r\n  border-radius: 25px;\r\n`\r\n\r\nconst Movie = ({movie, genres, small}) => {\r\n\r\n  const getGenres = (genres, movieIDs) => {\r\n    return movieIDs.slice(0,2).map((id) => {\r\n      for (const key in genres) {\r\n        if(id === genres[key].id) {\r\n          return genres[key].name;\r\n        }\r\n      }\r\n    }).join(' | ');\r\n  }\r\n\r\n  const getYear = (date) => {\r\n    return date.split('-')[0]\r\n  }\r\n\r\n  return (\r\n    <MovieContainer>\r\n      <Link to={`/movie/${movie.id}`}>\r\n        {movie.poster_path ? \r\n          <ImageContainer><img src={`http://image.tmdb.org/t/p/w500${movie.poster_path}`} alt=\"poster\"/></ImageContainer>\r\n        :\r\n          <BlankImage />\r\n        }\r\n        <MovieInfo>\r\n          <div>\r\n            <MovieTitle>{movie.original_title}!</MovieTitle>\r\n            {!small && <p>{getYear(movie.release_date)}</p>}\r\n          </div>\r\n          \r\n          <p>{getGenres(genres, movie.genre_ids)}</p>\r\n          <p><span role=\"img\" aria-label=\"star\">⭐ </span>{movie.vote_average} ({movie.vote_count})</p>\r\n        </MovieInfo>\r\n      </Link>\r\n    </MovieContainer>\r\n  );\r\n}\r\n \r\nexport default Movie;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Box = styled.main`\r\n  display: block;\r\n  background-color: #1F1B81;\r\n  padding: 2rem;\r\n  color: white;\r\n`\r\n\r\nconst Wrapper = ({children}) => {\r\n  return (\r\n    <Box>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n \r\nexport default Wrapper;","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst SearchBox = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 250px;\r\n  height: 70px;\r\n`\r\nconst SearchBoxContent = styled.div`\r\n  margin-top: 20px;\r\n  input {\r\n    padding: 1rem 2rem;\r\n    border-radius: 25px;\r\n    border: none;\r\n    background-color: #ffe694;\r\n    color: black;\r\n  }\r\n`\r\n\r\n\r\nconst SearchBar = ({handleQueryChange, handleSearchValueChange}) => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n\r\n  const handleInputChange = (event) => {\r\n    setSearchValue(event.currentTarget.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(searchValue !== '') {\r\n      handleQueryChange(`search/movie`)\r\n      handleSearchValueChange(`query=${searchValue}`)\r\n    } else {\r\n      handleQueryChange(`movie/popular`)\r\n      handleSearchValueChange('')\r\n    }\r\n\r\n  }, [searchValue])\r\n  \r\n  return (\r\n    <SearchBox>\r\n      <SearchBoxContent>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search..\"\r\n          onChange={handleInputChange}\r\n          value={searchValue}\r\n        />\r\n      </SearchBoxContent>\r\n    </SearchBox>\r\n  );\r\n}\r\n \r\nexport default SearchBar;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport MoviedbLogo from '../assets/moviedbicon.svg';\r\nimport { Link } from 'react-router-dom';\r\nimport SearchBar from './SearchBar';\r\n\r\nconst HeaderContent = styled.div`\r\n  position: relative;\r\n  display: block;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color: #1F1B81;\r\n  @media (max-width: 960px ) {\r\n    height: auto;\r\n    position: relative;\r\n  }\r\n  @media (max-width: 500px) {\r\n    height: 800px;\r\n  }\r\n`\r\n\r\nconst YellowBox = styled.div`\r\n  display: flex;\r\n  height: 400px;\r\n  background-color: #F7D052;\r\n  padding: 2rem;\r\n  justify-content: space-between;\r\n  @media (max-width: 960px ) {\r\n    height: 200px;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n  }\r\n`\r\nconst Logo = styled.div`\r\n  display: block;\r\n  width: 200px;\r\n`\r\n\r\nconst MovieContainer = styled.div`\r\n  position: relative;\r\n  top: -300px;\r\n  display: block;\r\n  width: 960px;\r\n  margin: 0 auto;\r\n  border-radius: 25px;\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n  @media (max-width: 960px ) {\r\n    width: 100%;\r\n    top: -50px;\r\n  }\r\n`\r\n\r\nconst MovieContent = styled.div`\r\n  color: white;\r\n  \r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  img {\r\n    width: 100%;\r\n    border-radius: 25px;\r\n    border: 7px solid white;\r\n    box-sizing: border-box;\r\n  }\r\n  @media (max-width: 960px ) {\r\n    img {\r\n      border: none;\r\n      border-radius: 0;\r\n    }\r\n  }\r\n\r\n  \r\n`\r\n\r\nconst MovieInfo = styled.div`\r\n  display: flex;\r\n  padding: 2rem;\r\n  div:first-child {\r\n    flex: 1;\r\n  }\r\n  h1, p {\r\n    margin: 5px 0;\r\n  }\r\n  p:last-child {\r\n    margin-top: 10px;\r\n  }\r\n  @media (max-width: 500px) {\r\n    flex-direction: column;\r\n    div:first-child {\r\n      flex: 1;\r\n      padding: 1rem;\r\n    }\r\n  }\r\n  \r\n`\r\n\r\nconst Desc = styled.p`\r\n  display: block;\r\n  flex: 3;\r\n  margin-left: 1rem;\r\n  padding: 0 1rem;\r\n`\r\n\r\nconst BlankImage = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 500px;\r\n  background-color: white;\r\n  border-radius: 25px;\r\n`\r\n\r\nconst Header = ({movie, isLoading, genres, home, setQuery, setSearchValue}) => {\r\n\r\n  const getGenres = (genres, movieIDs) => {\r\n    return movieIDs.slice(0,3).map((id) => {\r\n      for (const key in genres) {\r\n        if(id === genres[key].id) {\r\n          return genres[key].name;\r\n        }\r\n      }\r\n    }).join(' / ');\r\n  }\r\n\r\n\r\n  return (\r\n    <HeaderContent>\r\n      <YellowBox>\r\n        <Link to='/'>\r\n          <Logo>\r\n            <img src={MoviedbLogo} alt=\"Moviedb logo\" />\r\n          </Logo>\r\n        </Link>\r\n        {home && <SearchBar\r\n          handleQueryChange={setQuery}\r\n          handleSearchValueChange={setSearchValue}\r\n        />}\r\n      </YellowBox>\r\n      {!isLoading &&\r\n        <MovieContainer>\r\n          {movie ? \r\n          <Link to={`/movie/${movie.id}`}>\r\n            <MovieContent>\r\n              {movie.backdrop_path ? \r\n                <img src={`http://image.tmdb.org/t/p/w1280${movie.backdrop_path}`} alt=\"movie poster\"/>\r\n              :\r\n                <BlankImage />\r\n              }\r\n              \r\n              <MovieInfo>\r\n                <div>\r\n                  <h1>{movie.original_title}</h1>\r\n                  {genres && <p>{getGenres(genres, movie.genre_ids)}</p>}\r\n                  <p><span role=\"img\" aria-label=\"star\">⭐ </span>{movie.vote_average} ({movie.vote_count})</p>\r\n                </div>\r\n                <Desc>{movie.overview}</Desc>\r\n              </MovieInfo>\r\n            </MovieContent>\r\n          </Link>\r\n\r\n          : \r\n            <div></div>\r\n          }\r\n          \r\n\r\n        </MovieContainer>\r\n      }\r\n\r\n    </HeaderContent>\r\n  );\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonStyled = styled.button`\r\n  border: 2px solid #FFF;\r\n  background-color: #1F1B81;\r\n  border-radius: 10px;\r\n  padding: 1rem 3rem ;\r\n  margin: 1rem;\r\n  font-size: 1.25rem;\r\n  color: #FFF;\r\n  ${'' /* transition: background 0.2s ease-in-out;\r\n  transition: color 0.3s ease-in-out; */}\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #FFF;\r\n    color: #000;\r\n  }\r\n \r\n  @media (max-width: 500px) {\r\n    padding: 0.5rem 1rem;\r\n    flex: 1 0 auto;\r\n  }\r\n`\r\n\r\n\r\nconst Button = ({name, onClick}) => {\r\n  return (\r\n    <ButtonStyled\r\n      onClick={onClick}\r\n    >\r\n      {name}\r\n    </ButtonStyled>\r\n  );\r\n}\r\n \r\nexport default Button;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n  grid-template-columns: repeat(5, 18%);\r\n  grid-template-rows: repeat(1, auto);\r\n  grid-column-gap: 2.5%;\r\n  grid-row-gap: 2rem;\r\n\r\n  @media (max-width: 1050px) {\r\n    grid-template-columns: repeat(4,22%);\r\n    grid-column-gap: 4%;\r\n  }\r\n  @media (max-width: 960px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n    grid-row-gap: 2rem;\r\n  }\r\n\r\n`\r\n\r\nconst GridContainer = ({children}) => {\r\n  return (\r\n    <Container>\r\n      {children}\r\n    </Container>\r\n  );\r\n}\r\n \r\nexport default GridContainer;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\n\r\nconst SortContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 960px;\r\n  margin: 2rem auto;\r\n  h1 {\r\n    margin: 1rem 0;\r\n    font-size: 3rem;\r\n  }\r\n  @media (max-width: 960px ) {\r\n    width: 100%;\r\n  }\r\n\r\n`\r\n\r\nconst ButtonsBox = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  @media (max-width: 500px) {\r\n    justify-content: space-between;\r\n  }\r\n`\r\n\r\nconst SortBar = ({handleQueryChange}) => {\r\n  const [buttons] = useState([{name: 'Popular', query: 'movie/popular'}, {name: 'Upcoming', query: 'movie/upcoming'}, {name: 'Now playing', query: 'movie/now_playing'}, {name: 'Top rated', query: 'movie/top_rated'}]) \r\n\r\n  return (\r\n    <SortContainer>\r\n      <ButtonsBox>\r\n        {buttons.map((button, index)=>{\r\n          return(\r\n            <Button\r\n              key={index}\r\n              onClick={() => handleQueryChange(button.query)}\r\n              name={button.name}\r\n            />\r\n          )\r\n        })}\r\n      </ButtonsBox>\r\n    </SortContainer>\r\n  );\r\n}\r\n \r\nexport default SortBar;","import React, { useState, useEffect, useReducer } from 'react';\r\nimport Movie from './Movie';\r\nimport Wrapper from './Wrapper';\r\nimport Header from './Header';\r\nimport Button from './Button';\r\nimport GridContainer from './GridContainer';\r\nimport SortBar from './SortBar';\r\n\r\n\r\nfunction dataFetchReducer(state, action) {\r\n  switch(action.type) {\r\n    case \"FETCH_START\":\r\n      return {...state, isLoading: true}\r\n    case \"FETCH_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n        movies: action.movies,\r\n        genres: action.genres,\r\n        pages: action.pages,\r\n        isLoading: false\r\n      }\r\n    case \"FETCH_FAILED\":\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: true\r\n      }\r\n    case \"FETCH_ADD_PAGE\":\r\n      return {\r\n        ...state,\r\n        data: [...state.data, ...action.data],\r\n        isLoading: false,\r\n      }\r\n    default:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n        isLoading: true\r\n      }\r\n  }\r\n}\r\n\r\nconst Home = () => {\r\n  // const [apiKey] = useState(`https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_MOVIEDB_KEY}`);\r\n  const [apiGenres] = useState(`https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_MOVIEDB_KEY}`)\r\n  const [query, setQuery] = useState(`movie/popular`);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [endpoint, setEndpoint] = useState(`https://api.themoviedb.org/3/${query}?api_key=${process.env.REACT_APP_MOVIEDB_KEY}&page=${currentPage}&${searchValue}`);\r\n  const [state, dispatch] = useReducer(dataFetchReducer, {isLoading: true, data: null, genres: null, pages: null ,error: false })\r\n  \r\n  useEffect(()=> {\r\n    setEndpoint(`https://api.themoviedb.org/3/${query}?api_key=${process.env.REACT_APP_MOVIEDB_KEY}&page=${currentPage}&${searchValue}`)\r\n  }, [currentPage, query, searchValue])\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  },[query, searchValue])\r\n\r\n  useEffect(() => {\r\n    const fetching = async (endpoint) => {\r\n      dispatch({type: \"FETCH_START\"})\r\n      try {\r\n        const [res, genres] = await Promise.all([\r\n          fetch(endpoint),\r\n          fetch(apiGenres)\r\n        ]);\r\n        const resParsed = await res.json();\r\n        const genresParsed = await genres.json();\r\n        \r\n        if(currentPage === 1) {\r\n          dispatch({type: \"FETCH_SUCCESS\", data: resParsed.results, genres: genresParsed, pages: resParsed.total_pages, movies: resParsed.results})\r\n        } else {\r\n          dispatch({type: \"FETCH_ADD_PAGE\", data: resParsed.results})\r\n        }\r\n      }\r\n  \r\n      catch(err) {\r\n        dispatch({type: \"FETCH_FAILED\"})\r\n        console.log(\"Mamy problem\")\r\n      }\r\n    }\r\n    fetching(endpoint);\r\n    \r\n\r\n  },[endpoint, apiGenres])\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        movie = {!state.isLoading && state.data[0]}\r\n        isLoading = {state.isLoading}\r\n        genres = {!state.isLoading && state.genres.genres}\r\n        home={true}\r\n        setQuery={setQuery}\r\n        setSearchValue={setSearchValue}\r\n      />\r\n        <Wrapper>\r\n          {!state.isLoading && state.data.length !== 0 && \r\n            <SortBar \r\n              handleQueryChange={setQuery}\r\n            />\r\n          }\r\n          {!state.isLoading && \r\n            <>\r\n              <GridContainer>\r\n                {state.data.slice(1).map((movie, index) => {\r\n                  return (\r\n                    <Movie\r\n                      key={index}\r\n                      movie={!state.isLoading && movie}\r\n                      genres={state.genres.genres}\r\n                    />\r\n                  )\r\n                })} \r\n              </GridContainer>\r\n              {state.pages > currentPage && \r\n                <div style={{margin: '0 auto', width: 'fit-content'}}>\r\n                  <Button onClick={() => setCurrentPage(currentPage + 1)} name=\"Load more movies!\"/>\r\n                </div>\r\n              }\r\n            </>\r\n          }\r\n        </Wrapper>\r\n    </>\r\n  );\r\n}\r\n \r\nexport default Home;","import React,{ useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\nimport GridContainer from './GridContainer';\r\n\r\nconst Container = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`\r\nconst CastInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5em;\r\n  text-align: center;\r\n  div:first-child {\r\n    display: flex;\r\n    flex-direction: row;\r\n    ${'' /* align-items: center; */}\r\n    justify-content: space-between;\r\n    p { margin: 0;}\r\n  }\r\n  p {\r\n      margin: 5px 0;\r\n    }\r\n`\r\n\r\nconst ImageContainer = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  img {\r\n    width: 100%;\r\n    border-radius: 25px;\r\n  }\r\n`\r\nconst CastName = styled.h3`\r\n  margin: 1rem;\r\n`\r\n\r\nconst BlankImage = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 365px;\r\n  background-color: white;\r\n  border-radius: 25px;\r\n`\r\n\r\nconst PlayingBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CenteredDiv = styled.div`\r\n  display: block;\r\n  width: fit-content;\r\n  margin: 1rem auto 5rem;\r\n`\r\n\r\nconst MoviePageInfo = ({cast, crew}) => {\r\n  const [loadNumber, setLoadNumber] = useState(5);\r\n\r\n  return (\r\n    <Container>\r\n      <GridContainer>\r\n        {cast.slice(0,loadNumber).map((castMember) => {\r\n          return (\r\n            <CastInfo>\r\n              {!castMember.profile_path ? <BlankImage />\r\n                : \r\n                <ImageContainer><img src={`http://image.tmdb.org/t/p/w500${castMember.profile_path}`} alt=\"poster\"/></ImageContainer> \r\n              }\r\n              \r\n              <CastName>{castMember.name}!</CastName>\r\n              <PlayingBox>Playing: \r\n                <span> {castMember.character}</span>\r\n              </PlayingBox>\r\n            </CastInfo>\r\n          )\r\n        })}\r\n        \r\n      </GridContainer>\r\n      <CenteredDiv>\r\n        {cast.length > loadNumber && \r\n          <Button onClick={() => setLoadNumber(loadNumber + 5)} name=\"Load more members!\"/>\r\n        }\r\n      </CenteredDiv>\r\n      {/* CREW */}\r\n      <h1>Producers, directors..</h1>\r\n      <GridContainer>\r\n        {crew.map((crewMember) => {\r\n          let job = crewMember.job;\r\n          if(job === 'Director' || job === 'Executive Producer' || job === 'Screenplay' || job === 'Producer' || job === 'Original Music Composer' || job === 'Director of Photography')\r\n          return (\r\n            <CastInfo>\r\n              {!crewMember.profile_path ? <BlankImage />\r\n                : \r\n                <ImageContainer><img src={`http://image.tmdb.org/t/p/w500${crewMember.profile_path}`} alt=\"poster\"/></ImageContainer> \r\n              }\r\n              \r\n              <CastName>{crewMember.name}!</CastName>\r\n              <h3>{crewMember.job}</h3>\r\n            </CastInfo>\r\n          )\r\n        })}\r\n      </GridContainer>\r\n    </Container>\r\n  );\r\n}\r\n \r\nexport default MoviePageInfo","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  margin: 5rem 2rem;\r\n  @media (max-width: 500px) {\r\n    margin: 0;\r\n  }\r\n`\r\n\r\nconst ProductionInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  h3 {\r\n    text-align: center;\r\n  }\r\n`\r\n\r\nconst ImageCircle = styled.img`\r\n  display: block;\r\n  width: 250px;\r\n`\r\n\r\nconst MoviePageProduction = ({production}) => {\r\n  return (\r\n    <Container>\r\n      {production.map((company) => {\r\n        if(company.logo_path) {\r\n          return (\r\n            <ProductionInfo>\r\n              <h3>{company.name}</h3>\r\n              <ImageCircle src={`http://image.tmdb.org/t/p/w500${company.logo_path}`} />\r\n            </ProductionInfo>\r\n          )\r\n        }\r\n      })}\r\n    </Container>\r\n  );\r\n}\r\n \r\nexport default MoviePageProduction;","import React, { useState, useEffect, useReducer } from 'react';\r\nimport Wrapper from './Wrapper';\r\nimport Header from './Header';\r\nimport MoviePageInfo from './MoviePageInfo';\r\nimport MoviePageProduction from './MoviePageProduction';\r\n\r\n\r\nfunction dataFetchReducer(state, action) {\r\n  switch(action.type) {\r\n    case \"FETCH_START\":\r\n      return {...state, isLoading: true}\r\n    case \"FETCH_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        movieData: action.movieData,\r\n        creditsData: action.creditsData,\r\n        isLoading: false\r\n      }\r\n    case \"FETCH_FAILED\":\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        err: true\r\n      }\r\n    default:\r\n      return {\r\n        ...state,\r\n        err: true\r\n      }\r\n  }\r\n}\r\n\r\nconst MoviePage = (props) => {\r\n\r\n  const [movieApi] = useState(`https://api.themoviedb.org/3/movie/${props.match.params.movieID}?api_key=${process.env.REACT_APP_MOVIEDB_KEY}&language=en-US`); \r\n  const [movieCreditsApi] = useState(`https://api.themoviedb.org/3/movie/${props.match.params.movieID}/credits?api_key=${process.env.REACT_APP_MOVIEDB_KEY}&language=en-US`)\r\n\r\n  const [state, dispatch] = useReducer(dataFetchReducer, {isLoading: true, movieData: null, creditsData: null, err: false })\r\n\r\n  useEffect(() => {\r\n    const fetchMovieData = async () => {\r\n      dispatch({type: \"FETCH_START\"})\r\n      try {\r\n        const [res1, res2] = await Promise.all([\r\n          fetch(movieApi),\r\n          fetch(movieCreditsApi)\r\n        ]);\r\n        const movieData = await res1.json();\r\n        const creditsData = await res2.json();\r\n        dispatch({type: \"FETCH_SUCCESS\", movieData: movieData, creditsData: creditsData})\r\n      }\r\n\r\n      catch(err) {\r\n        dispatch({type: \"FETCH_FAILED\"})\r\n        console.error(err);\r\n      }\r\n    }\r\n    fetchMovieData();\r\n  }, [movieApi, movieCreditsApi])\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        movie = {!state.isLoading && state.movieData}\r\n        isLoading = {state.isLoading}\r\n      />\r\n      <Wrapper>\r\n        {!state.isLoading && <span style={{display: 'block', textAlign: 'center', fontStyle: 'italic', fontSize: '2rem', margin: '0 0 4rem 0'}}>{state.movieData.tagline}</span>}\r\n        <h1>Cast members:</h1>\r\n        {!state.isLoading && \r\n          <MoviePageInfo \r\n            cast = {state.creditsData.cast}\r\n            crew = {state.creditsData.crew}\r\n          />\r\n        }\r\n        <h1>Production companies</h1>\r\n        {!state.isLoading && \r\n          <MoviePageProduction production={!state.isLoading && state.movieData.production_companies}/>\r\n        }\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MoviePage;","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport MoviePage from './components/MoviePage';\nimport { Switch, Route } from 'react-router-dom';\nimport ScrollToTop from './components/ScrollToTop';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ScrollToTop />\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/movie/:movieID' component={MoviePage} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render((\n  <BrowserRouter basename={window.location.pathname || ''}>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}